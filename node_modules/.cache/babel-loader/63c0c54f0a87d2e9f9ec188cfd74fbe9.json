{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createClass;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\nvar _Result = _interopRequireDefault(require(\"./Result\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction createClass({\n  api,\n  apiType,\n  decorateMethod\n}) {\n  var _ignoreStatusCb, _makeEraOptions, _makeSignOptions, _makeSignAndSendOptions, _observeSign, _observeStatus, _observeSend, _observeSubscribe, _optionsOrNonce, _signViaSigner, _updateSigner, _temp; // an instance of the base extrinsic for us to extend\n\n\n  const ExtrinsicBase = api.registry.createClass('Extrinsic');\n  return _temp = (_ignoreStatusCb = (0, _classPrivateFieldLooseKey2.default)(\"ignoreStatusCb\"), _makeEraOptions = (0, _classPrivateFieldLooseKey2.default)(\"makeEraOptions\"), _makeSignOptions = (0, _classPrivateFieldLooseKey2.default)(\"makeSignOptions\"), _makeSignAndSendOptions = (0, _classPrivateFieldLooseKey2.default)(\"makeSignAndSendOptions\"), _observeSign = (0, _classPrivateFieldLooseKey2.default)(\"observeSign\"), _observeStatus = (0, _classPrivateFieldLooseKey2.default)(\"observeStatus\"), _observeSend = (0, _classPrivateFieldLooseKey2.default)(\"observeSend\"), _observeSubscribe = (0, _classPrivateFieldLooseKey2.default)(\"observeSubscribe\"), _optionsOrNonce = (0, _classPrivateFieldLooseKey2.default)(\"optionsOrNonce\"), _signViaSigner = (0, _classPrivateFieldLooseKey2.default)(\"signViaSigner\"), _updateSigner = (0, _classPrivateFieldLooseKey2.default)(\"updateSigner\"), class Submittable extends ExtrinsicBase {\n    constructor(registry, extrinsic) {\n      super(registry, extrinsic, {\n        version: api.extrinsicType\n      });\n      Object.defineProperty(this, _ignoreStatusCb, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _makeEraOptions, {\n        writable: true,\n        value: (options, {\n          header,\n          mortalLength,\n          nonce\n        }) => {\n          if (!header) {\n            if ((0, _util.isNumber)(options.era)) {\n              // since we have no header, it is immortal, remove any option overrides\n              // so we only supply the genesisHash and no era to the construction\n              delete options.era;\n              delete options.blockHash;\n            }\n\n            return (0, _classPrivateFieldLooseBase2.default)(this, _makeSignOptions)[_makeSignOptions](options, {\n              nonce\n            });\n          }\n\n          return (0, _classPrivateFieldLooseBase2.default)(this, _makeSignOptions)[_makeSignOptions](options, {\n            blockHash: header.hash,\n            era: this.registry.createType('ExtrinsicEra', {\n              current: header.number,\n              period: options.era || mortalLength\n            }),\n            nonce\n          });\n        }\n      });\n      Object.defineProperty(this, _makeSignOptions, {\n        writable: true,\n        value: (options, extras) => {\n          return _objectSpread(_objectSpread(_objectSpread({\n            blockHash: api.genesisHash,\n            genesisHash: api.genesisHash\n          }, options), extras), {}, {\n            runtimeVersion: api.runtimeVersion,\n            signedExtensions: api.registry.signedExtensions,\n            version: api.extrinsicType\n          });\n        }\n      });\n      Object.defineProperty(this, _makeSignAndSendOptions, {\n        writable: true,\n        value: (optionsOrStatus, statusCb) => {\n          let options = {};\n\n          if ((0, _util.isFunction)(optionsOrStatus)) {\n            statusCb = optionsOrStatus;\n          } else {\n            options = _objectSpread({}, optionsOrStatus);\n          }\n\n          return [options, statusCb];\n        }\n      });\n      Object.defineProperty(this, _observeSign, {\n        writable: true,\n        value: (account, optionsOrNonce) => {\n          const address = (0, _util2.isKeyringPair)(account) ? account.address : account.toString();\n\n          const options = (0, _classPrivateFieldLooseBase2.default)(this, _optionsOrNonce)[_optionsOrNonce](optionsOrNonce);\n\n          let updateId;\n          return api.derive.tx.signingInfo(address, options.nonce, options.era).pipe((0, _operators.first)(), (0, _operators.mergeMap)(async signingInfo => {\n            const eraOptions = (0, _classPrivateFieldLooseBase2.default)(this, _makeEraOptions)[_makeEraOptions](options, signingInfo);\n\n            if ((0, _util2.isKeyringPair)(account)) {\n              this.sign(account, eraOptions);\n            } else {\n              updateId = await (0, _classPrivateFieldLooseBase2.default)(this, _signViaSigner)[_signViaSigner](address, eraOptions, signingInfo.header);\n            }\n          }), (0, _operators.mapTo)(updateId));\n        }\n      });\n      Object.defineProperty(this, _observeStatus, {\n        writable: true,\n        value: (hash, status) => {\n          if (!status.isFinalized && !status.isInBlock) {\n            return (0, _rxjs.of)(new _Result.default({\n              status\n            }));\n          }\n\n          const blockHash = status.isInBlock ? status.asInBlock : status.asFinalized;\n          return api.derive.tx.events(blockHash).pipe((0, _operators.map)(({\n            block,\n            events\n          }) => new _Result.default({\n            events: (0, _util2.filterEvents)(hash, block, events, status),\n            status\n          })));\n        }\n      });\n      Object.defineProperty(this, _observeSend, {\n        writable: true,\n        value: (updateId = -1) => {\n          return api.rpc.author.submitExtrinsic(this).pipe((0, _operators.tap)(hash => {\n            (0, _classPrivateFieldLooseBase2.default)(this, _updateSigner)[_updateSigner](updateId, hash);\n          }));\n        }\n      });\n      Object.defineProperty(this, _observeSubscribe, {\n        writable: true,\n        value: (updateId = -1) => {\n          const hash = this.hash;\n          return api.rpc.author.submitAndWatchExtrinsic(this).pipe((0, _operators.switchMap)(status => (0, _classPrivateFieldLooseBase2.default)(this, _observeStatus)[_observeStatus](hash, status)), (0, _operators.tap)(status => {\n            (0, _classPrivateFieldLooseBase2.default)(this, _updateSigner)[_updateSigner](updateId, status);\n          }));\n        }\n      });\n      Object.defineProperty(this, _optionsOrNonce, {\n        writable: true,\n        value: (optionsOrNonce = {}) => {\n          return (0, _util.isBn)(optionsOrNonce) || (0, _util.isNumber)(optionsOrNonce) ? {\n            nonce: optionsOrNonce\n          } : optionsOrNonce;\n        }\n      });\n      Object.defineProperty(this, _signViaSigner, {\n        writable: true,\n        value: async (address, options, header) => {\n          const signer = options.signer || api.signer;\n          (0, _util.assert)(signer, 'No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');\n          const payload = this.registry.createType('SignerPayload', _objectSpread(_objectSpread({}, options), {}, {\n            address,\n            blockNumber: header ? header.number : 0,\n            method: this.method\n          }));\n          let result;\n\n          if (signer.signPayload) {\n            result = await signer.signPayload(payload.toPayload());\n          } else if (signer.signRaw) {\n            result = await signer.signRaw(payload.toRaw());\n          } else {\n            throw new Error('Invalid signer interface, it should implement either signPayload or signRaw (or both)');\n          } // Here we explicitly call `toPayload()` again instead of working with an object\n          // (reference) as passed to the signer. This means that we are sure that the\n          // payload data is not modified from our inputs, but the signer\n\n\n          super.addSignature(address, result.signature, payload.toPayload());\n          return result.id;\n        }\n      });\n      Object.defineProperty(this, _updateSigner, {\n        writable: true,\n        value: (updateId, status) => {\n          if (updateId !== -1 && api.signer && api.signer.update) {\n            api.signer.update(updateId, status);\n          }\n        }\n      });\n      (0, _classPrivateFieldLooseBase2.default)(this, _ignoreStatusCb)[_ignoreStatusCb] = apiType === 'rxjs';\n    } // calculate the payment info for this transaction (if signed and submitted)\n\n\n    paymentInfo(account, optionsOrHash) {\n      if ((0, _util.isString)(optionsOrHash) || (0, _util.isU8a)(optionsOrHash)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return decorateMethod(() => api.rpc.payment.queryInfo(this.toHex(), optionsOrHash));\n      }\n\n      const [allOptions] = (0, _classPrivateFieldLooseBase2.default)(this, _makeSignAndSendOptions)[_makeSignAndSendOptions](optionsOrHash);\n\n      const address = (0, _util2.isKeyringPair)(account) ? account.address : account.toString(); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(() => api.derive.tx.signingInfo(address, allOptions.nonce, allOptions.era).pipe((0, _operators.first)(), (0, _operators.switchMap)(signingInfo => {\n        // setup our options (same way as in signAndSend)\n        const eraOptions = (0, _classPrivateFieldLooseBase2.default)(this, _makeEraOptions)[_makeEraOptions](allOptions, signingInfo);\n\n        const signOptions = (0, _classPrivateFieldLooseBase2.default)(this, _makeSignOptions)[_makeSignOptions](eraOptions, {}); // add a fake signature to the extrinsic\n\n\n        this.signFake(address, signOptions);\n        return api.rpc.payment.queryInfo(this.toHex());\n      })))();\n    }\n    /**\n     * @description Sign a transaction, returning the this to allow chaining, i.e. .sign(...).send(). When options, e.g. nonce/blockHash are not specified, it will be inferred. To retrieve eg. nonce use `signAsync` (the preferred interface, this is provided for backwards compatibility)\n     * @deprecated\n     */\n\n\n    sign(account, optionsOrNonce) {\n      super.sign(account, (0, _classPrivateFieldLooseBase2.default)(this, _makeSignOptions)[_makeSignOptions]((0, _classPrivateFieldLooseBase2.default)(this, _optionsOrNonce)[_optionsOrNonce](optionsOrNonce), {}));\n      return this;\n    }\n    /**\n     * @description Signs a transaction, returning `this` to allow chaining. E.g.: `sign(...).send()`. Like `.signAndSend` this will retrieve the nonce and blockHash to send the tx with.\n     */\n\n\n    signAsync(account, optionsOrNonce) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n      return decorateMethod(() => (0, _classPrivateFieldLooseBase2.default)(this, _observeSign)[_observeSign](account, optionsOrNonce).pipe((0, _operators.mapTo)(this)))();\n    } // signAndSend with an immediate Hash result\n    // signAndSend implementation for all 3 cases above\n\n\n    signAndSend(account, optionsOrStatus, optionalStatusCb) {\n      const [options, statusCb] = (0, _classPrivateFieldLooseBase2.default)(this, _makeSignAndSendOptions)[_makeSignAndSendOptions](optionsOrStatus, optionalStatusCb);\n\n      const isSubscription = api.hasSubscriptions && ((0, _classPrivateFieldLooseBase2.default)(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(() => (0, _classPrivateFieldLooseBase2.default)(this, _observeSign)[_observeSign](account, options).pipe((0, _operators.switchMap)(updateId => isSubscription ? (0, _classPrivateFieldLooseBase2.default)(this, _observeSubscribe)[_observeSubscribe](updateId) : (0, _classPrivateFieldLooseBase2.default)(this, _observeSend)[_observeSend](updateId))) // FIXME This is wrong, SubmittableResult is _not_ a codec\n      )(statusCb);\n    } // send with an immediate Hash result\n    // send implementation for both immediate Hash and statusCb variants\n\n\n    send(statusCb) {\n      const isSubscription = api.hasSubscriptions && ((0, _classPrivateFieldLooseBase2.default)(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(isSubscription ? (0, _classPrivateFieldLooseBase2.default)(this, _observeSubscribe)[_observeSubscribe] : (0, _classPrivateFieldLooseBase2.default)(this, _observeSend)[_observeSend])(statusCb);\n    }\n\n  }), _temp;\n}","map":{"version":3,"sources":["/home/michiel/Downloads/polkabasics-main/node_modules/@polkadot/api/submittable/createClass.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","createClass","_defineProperty2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_rxjs","_operators","_util","_util2","_Result","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","api","apiType","decorateMethod","_ignoreStatusCb","_makeEraOptions","_makeSignOptions","_makeSignAndSendOptions","_observeSign","_observeStatus","_observeSend","_observeSubscribe","_optionsOrNonce","_signViaSigner","_updateSigner","_temp","ExtrinsicBase","registry","Submittable","constructor","extrinsic","version","extrinsicType","writable","options","header","mortalLength","nonce","isNumber","era","blockHash","hash","createType","current","number","period","extras","genesisHash","runtimeVersion","signedExtensions","optionsOrStatus","statusCb","isFunction","account","optionsOrNonce","address","isKeyringPair","toString","updateId","derive","tx","signingInfo","pipe","first","mergeMap","eraOptions","sign","mapTo","status","isFinalized","isInBlock","of","asInBlock","asFinalized","events","map","block","filterEvents","rpc","author","submitExtrinsic","tap","submitAndWatchExtrinsic","switchMap","isBn","signer","assert","payload","blockNumber","method","result","signPayload","toPayload","signRaw","toRaw","Error","addSignature","signature","id","update","paymentInfo","optionsOrHash","isString","isU8a","payment","queryInfo","toHex","allOptions","signOptions","signFake","signAsync","signAndSend","optionalStatusCb","isSubscription","hasSubscriptions","send"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createClass;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\nvar _Result = _interopRequireDefault(require(\"./Result\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction createClass({\n  api,\n  apiType,\n  decorateMethod\n}) {\n  var _ignoreStatusCb, _makeEraOptions, _makeSignOptions, _makeSignAndSendOptions, _observeSign, _observeStatus, _observeSend, _observeSubscribe, _optionsOrNonce, _signViaSigner, _updateSigner, _temp;\n\n  // an instance of the base extrinsic for us to extend\n  const ExtrinsicBase = api.registry.createClass('Extrinsic');\n  return _temp = (_ignoreStatusCb = (0, _classPrivateFieldLooseKey2.default)(\"ignoreStatusCb\"), _makeEraOptions = (0, _classPrivateFieldLooseKey2.default)(\"makeEraOptions\"), _makeSignOptions = (0, _classPrivateFieldLooseKey2.default)(\"makeSignOptions\"), _makeSignAndSendOptions = (0, _classPrivateFieldLooseKey2.default)(\"makeSignAndSendOptions\"), _observeSign = (0, _classPrivateFieldLooseKey2.default)(\"observeSign\"), _observeStatus = (0, _classPrivateFieldLooseKey2.default)(\"observeStatus\"), _observeSend = (0, _classPrivateFieldLooseKey2.default)(\"observeSend\"), _observeSubscribe = (0, _classPrivateFieldLooseKey2.default)(\"observeSubscribe\"), _optionsOrNonce = (0, _classPrivateFieldLooseKey2.default)(\"optionsOrNonce\"), _signViaSigner = (0, _classPrivateFieldLooseKey2.default)(\"signViaSigner\"), _updateSigner = (0, _classPrivateFieldLooseKey2.default)(\"updateSigner\"), class Submittable extends ExtrinsicBase {\n    constructor(registry, extrinsic) {\n      super(registry, extrinsic, {\n        version: api.extrinsicType\n      });\n      Object.defineProperty(this, _ignoreStatusCb, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _makeEraOptions, {\n        writable: true,\n        value: (options, {\n          header,\n          mortalLength,\n          nonce\n        }) => {\n          if (!header) {\n            if ((0, _util.isNumber)(options.era)) {\n              // since we have no header, it is immortal, remove any option overrides\n              // so we only supply the genesisHash and no era to the construction\n              delete options.era;\n              delete options.blockHash;\n            }\n\n            return (0, _classPrivateFieldLooseBase2.default)(this, _makeSignOptions)[_makeSignOptions](options, {\n              nonce\n            });\n          }\n\n          return (0, _classPrivateFieldLooseBase2.default)(this, _makeSignOptions)[_makeSignOptions](options, {\n            blockHash: header.hash,\n            era: this.registry.createType('ExtrinsicEra', {\n              current: header.number,\n              period: options.era || mortalLength\n            }),\n            nonce\n          });\n        }\n      });\n      Object.defineProperty(this, _makeSignOptions, {\n        writable: true,\n        value: (options, extras) => {\n          return _objectSpread(_objectSpread(_objectSpread({\n            blockHash: api.genesisHash,\n            genesisHash: api.genesisHash\n          }, options), extras), {}, {\n            runtimeVersion: api.runtimeVersion,\n            signedExtensions: api.registry.signedExtensions,\n            version: api.extrinsicType\n          });\n        }\n      });\n      Object.defineProperty(this, _makeSignAndSendOptions, {\n        writable: true,\n        value: (optionsOrStatus, statusCb) => {\n          let options = {};\n\n          if ((0, _util.isFunction)(optionsOrStatus)) {\n            statusCb = optionsOrStatus;\n          } else {\n            options = _objectSpread({}, optionsOrStatus);\n          }\n\n          return [options, statusCb];\n        }\n      });\n      Object.defineProperty(this, _observeSign, {\n        writable: true,\n        value: (account, optionsOrNonce) => {\n          const address = (0, _util2.isKeyringPair)(account) ? account.address : account.toString();\n\n          const options = (0, _classPrivateFieldLooseBase2.default)(this, _optionsOrNonce)[_optionsOrNonce](optionsOrNonce);\n\n          let updateId;\n          return api.derive.tx.signingInfo(address, options.nonce, options.era).pipe((0, _operators.first)(), (0, _operators.mergeMap)(async signingInfo => {\n            const eraOptions = (0, _classPrivateFieldLooseBase2.default)(this, _makeEraOptions)[_makeEraOptions](options, signingInfo);\n\n            if ((0, _util2.isKeyringPair)(account)) {\n              this.sign(account, eraOptions);\n            } else {\n              updateId = await (0, _classPrivateFieldLooseBase2.default)(this, _signViaSigner)[_signViaSigner](address, eraOptions, signingInfo.header);\n            }\n          }), (0, _operators.mapTo)(updateId));\n        }\n      });\n      Object.defineProperty(this, _observeStatus, {\n        writable: true,\n        value: (hash, status) => {\n          if (!status.isFinalized && !status.isInBlock) {\n            return (0, _rxjs.of)(new _Result.default({\n              status\n            }));\n          }\n\n          const blockHash = status.isInBlock ? status.asInBlock : status.asFinalized;\n          return api.derive.tx.events(blockHash).pipe((0, _operators.map)(({\n            block,\n            events\n          }) => new _Result.default({\n            events: (0, _util2.filterEvents)(hash, block, events, status),\n            status\n          })));\n        }\n      });\n      Object.defineProperty(this, _observeSend, {\n        writable: true,\n        value: (updateId = -1) => {\n          return api.rpc.author.submitExtrinsic(this).pipe((0, _operators.tap)(hash => {\n            (0, _classPrivateFieldLooseBase2.default)(this, _updateSigner)[_updateSigner](updateId, hash);\n          }));\n        }\n      });\n      Object.defineProperty(this, _observeSubscribe, {\n        writable: true,\n        value: (updateId = -1) => {\n          const hash = this.hash;\n          return api.rpc.author.submitAndWatchExtrinsic(this).pipe((0, _operators.switchMap)(status => (0, _classPrivateFieldLooseBase2.default)(this, _observeStatus)[_observeStatus](hash, status)), (0, _operators.tap)(status => {\n            (0, _classPrivateFieldLooseBase2.default)(this, _updateSigner)[_updateSigner](updateId, status);\n          }));\n        }\n      });\n      Object.defineProperty(this, _optionsOrNonce, {\n        writable: true,\n        value: (optionsOrNonce = {}) => {\n          return (0, _util.isBn)(optionsOrNonce) || (0, _util.isNumber)(optionsOrNonce) ? {\n            nonce: optionsOrNonce\n          } : optionsOrNonce;\n        }\n      });\n      Object.defineProperty(this, _signViaSigner, {\n        writable: true,\n        value: async (address, options, header) => {\n          const signer = options.signer || api.signer;\n          (0, _util.assert)(signer, 'No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.');\n          const payload = this.registry.createType('SignerPayload', _objectSpread(_objectSpread({}, options), {}, {\n            address,\n            blockNumber: header ? header.number : 0,\n            method: this.method\n          }));\n          let result;\n\n          if (signer.signPayload) {\n            result = await signer.signPayload(payload.toPayload());\n          } else if (signer.signRaw) {\n            result = await signer.signRaw(payload.toRaw());\n          } else {\n            throw new Error('Invalid signer interface, it should implement either signPayload or signRaw (or both)');\n          } // Here we explicitly call `toPayload()` again instead of working with an object\n          // (reference) as passed to the signer. This means that we are sure that the\n          // payload data is not modified from our inputs, but the signer\n\n\n          super.addSignature(address, result.signature, payload.toPayload());\n          return result.id;\n        }\n      });\n      Object.defineProperty(this, _updateSigner, {\n        writable: true,\n        value: (updateId, status) => {\n          if (updateId !== -1 && api.signer && api.signer.update) {\n            api.signer.update(updateId, status);\n          }\n        }\n      });\n      (0, _classPrivateFieldLooseBase2.default)(this, _ignoreStatusCb)[_ignoreStatusCb] = apiType === 'rxjs';\n    } // calculate the payment info for this transaction (if signed and submitted)\n\n\n    paymentInfo(account, optionsOrHash) {\n      if ((0, _util.isString)(optionsOrHash) || (0, _util.isU8a)(optionsOrHash)) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return decorateMethod(() => api.rpc.payment.queryInfo(this.toHex(), optionsOrHash));\n      }\n\n      const [allOptions] = (0, _classPrivateFieldLooseBase2.default)(this, _makeSignAndSendOptions)[_makeSignAndSendOptions](optionsOrHash);\n\n      const address = (0, _util2.isKeyringPair)(account) ? account.address : account.toString(); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(() => api.derive.tx.signingInfo(address, allOptions.nonce, allOptions.era).pipe((0, _operators.first)(), (0, _operators.switchMap)(signingInfo => {\n        // setup our options (same way as in signAndSend)\n        const eraOptions = (0, _classPrivateFieldLooseBase2.default)(this, _makeEraOptions)[_makeEraOptions](allOptions, signingInfo);\n\n        const signOptions = (0, _classPrivateFieldLooseBase2.default)(this, _makeSignOptions)[_makeSignOptions](eraOptions, {}); // add a fake signature to the extrinsic\n\n\n        this.signFake(address, signOptions);\n        return api.rpc.payment.queryInfo(this.toHex());\n      })))();\n    }\n    /**\n     * @description Sign a transaction, returning the this to allow chaining, i.e. .sign(...).send(). When options, e.g. nonce/blockHash are not specified, it will be inferred. To retrieve eg. nonce use `signAsync` (the preferred interface, this is provided for backwards compatibility)\n     * @deprecated\n     */\n\n\n    sign(account, optionsOrNonce) {\n      super.sign(account, (0, _classPrivateFieldLooseBase2.default)(this, _makeSignOptions)[_makeSignOptions]((0, _classPrivateFieldLooseBase2.default)(this, _optionsOrNonce)[_optionsOrNonce](optionsOrNonce), {}));\n      return this;\n    }\n    /**\n     * @description Signs a transaction, returning `this` to allow chaining. E.g.: `sign(...).send()`. Like `.signAndSend` this will retrieve the nonce and blockHash to send the tx with.\n     */\n\n\n    signAsync(account, optionsOrNonce) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n      return decorateMethod(() => (0, _classPrivateFieldLooseBase2.default)(this, _observeSign)[_observeSign](account, optionsOrNonce).pipe((0, _operators.mapTo)(this)))();\n    } // signAndSend with an immediate Hash result\n\n\n    // signAndSend implementation for all 3 cases above\n    signAndSend(account, optionsOrStatus, optionalStatusCb) {\n      const [options, statusCb] = (0, _classPrivateFieldLooseBase2.default)(this, _makeSignAndSendOptions)[_makeSignAndSendOptions](optionsOrStatus, optionalStatusCb);\n\n      const isSubscription = api.hasSubscriptions && ((0, _classPrivateFieldLooseBase2.default)(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(() => (0, _classPrivateFieldLooseBase2.default)(this, _observeSign)[_observeSign](account, options).pipe((0, _operators.switchMap)(updateId => isSubscription ? (0, _classPrivateFieldLooseBase2.default)(this, _observeSubscribe)[_observeSubscribe](updateId) : (0, _classPrivateFieldLooseBase2.default)(this, _observeSend)[_observeSend](updateId))) // FIXME This is wrong, SubmittableResult is _not_ a codec\n      )(statusCb);\n    } // send with an immediate Hash result\n\n\n    // send implementation for both immediate Hash and statusCb variants\n    send(statusCb) {\n      const isSubscription = api.hasSubscriptions && ((0, _classPrivateFieldLooseBase2.default)(this, _ignoreStatusCb)[_ignoreStatusCb] || !!statusCb); // eslint-disable-next-line @typescript-eslint/no-unsafe-return,@typescript-eslint/no-unsafe-call\n\n      return decorateMethod(isSubscription ? (0, _classPrivateFieldLooseBase2.default)(this, _observeSubscribe)[_observeSubscribe] : (0, _classPrivateFieldLooseBase2.default)(this, _observeSend)[_observeSend])(statusCb);\n    }\n\n  }), _temp;\n}"]},"metadata":{},"sourceType":"script"}